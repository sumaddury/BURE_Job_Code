#!/bin/bash
#SBATCH --output=logs/sample_%A.out

set -euo pipefail

# TOTAL_TRIALS=${TOTAL_TRIALS:-1000}
WORKERS=4
# ${WORKERS:-1}

export work=/scratch/$USER/${DEP_JOB_ID}
export PYTHONUNBUFFERED=1
export SINGULARITYENV_OMP_NUM_THREADS=1
export SINGULARITYENV_MKL_NUM_THREADS=1
export SINGULARITYENV_OPENBLAS_NUM_THREADS=1
cd "$work"

export CUDA_MPS_PIPE_DIRECTORY=/tmp/mps-$SLURM_JOB_ID
export CUDA_MPS_LOG_DIRECTORY=$CUDA_MPS_PIPE_DIRECTORY
export CUDA_VISIBLE_DEVICES=${SLURM_JOB_GPUS:-0}
mkdir -p "$CUDA_MPS_PIPE_DIRECTORY"
echo "starting"
nvidia-cuda-mps-control -d
echo "ending"
i=0
while [[ ! -S $CUDA_MPS_PIPE_DIRECTORY/nvidia-mps ]]; do
    sleep 0.5
    ((i++))
    if (( i % 10 == 0 )); then
        echo "  still waiting ($(bc <<<"scale=1; $i*0.5") s elapsed)"
    fi
done
echo "hello"

# TASK_ID=${SLURM_ARRAY_TASK_ID}
# NUM_TASKS=${SLURM_ARRAY_TASK_COUNT}
TRIALS_PER=125
# $(( TOTAL_TRIALS / NUM_TASKS ))

OUTDIR=pyro_dists
# lightning_worker/${TASK_ID}

# echo "=== TASK ${TASK_ID}/${NUM_TASKS} starting at $(date) ==="

  # --env PL_TEST_DEVICE=cuda \

singularity exec --nv \
  --env PYTHONUNBUFFERED=1 \
  --env CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES \
  --env PL_TEST_DEVICE=cuda \
  --env CUDA_MPS_PIPE_DIRECTORY=$CUDA_MPS_PIPE_DIRECTORY \
  --env CUDA_MPS_LOG_DIRECTORY=$CUDA_MPS_LOG_DIRECTORY \
  --env PYRO_DEVICE=cuda \
  --bind "${work}:${work}" \
  --bind /tmp:/tmp \
  --pwd  "${work}" \
  "$IMG" bash -lc '
    # echo ">> INSIDE container: Task $SLURM_ARRAY_TASK_ID of $SLURM_ARRAY_TASK_COUNT"

    cleanup() { echo quit | nvidia-cuda-mps-control; }
    trap cleanup EXIT

    source .venv/bin/activate

    if ! python3 -c "import torch,sys; sys.exit(0 if torch.cuda.is_available() else 1)"; then
      echo "ERROR: CUDA not availableâ€”aborting." >&2
      exit 1
    fi

    cp -n conftest.py pyro_repo/

    mkdir -p '"$OUTDIR"'
    python3 -u Distributions.py sample_csv \
        --csv-in test_csvs/pyro_assertions_m1.csv \
        --dir-out '"$OUTDIR"' \
        --assertions "$(paste -sd, pyro_interest_gpu.txt)" \
        --trials '"$TRIALS_PER"' \
        --workers '"$WORKERS"' \
        --repo-name pyro_repo \
        --seed-value 42 \
        --seed-config-file-in "../seed_configs.yaml" \
        --seed-config-names "NO_SEEDS;RANDOM,NUMPY;RANDOM,NUMPY,TORCH"
'