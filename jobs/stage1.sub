#!/bin/bash
#SBATCH --job-name=pl_stage1
#SBATCH --output=logs/stage1_%j.out

export PATH=/share/apps/singularity/3.7.0/bin:$PATH

set -euo pipefail

# 1) stage the repo into fast node-local scratch
work=/scratch/$USER/$SLURM_JOB_ID
mkdir -p "$work"
cp -a "$SLURM_SUBMIT_DIR"/* "$work"/
cd "$work"

# 2) run the two AssertSpecFinder steps (clones Lightning internally)
mkdir -p ast_dir
singularity exec \
  --bind "${work}:${work}" \
  "$IMG" bash -lc "cd ${work} && \
   python3 AssertSpecFinder.py compile --project-link https://github.com/Lightning-AI/pytorch-lightning.git \
    --clone-dir lightning_repo \
    --asts-out ast_dir/lightning_asts.pkl

mkdir -p test_csvs
singularity exec \
  --bind "${work}:${work}" \
  "$IMG" bash -lc "cd ${work} && \
   python3 AssertSpecFinder.py mine --asts-in ast_dir/lightning_asts.pkl \
    --csv-target test_csvs/lightning_assertions.csv \
    --funcs-out ast_dir/lightning_funcs.pkl

# 3) build isolated Python 3.10 env, then install deps
python3.10 -m venv .venv
source .venv/bin/activate
pip install --upgrade pip
pip install -r requirements_custom.txt
pip freeze > constraints.txt
pip install -r script_reqs.txt --constraint constraints.txt

# 4) seed stripping + instrumentation
singularity exec \
  --bind "${work}:${work}" \
  "$IMG" bash -lc "cd ${work} && \
   python3 Seeder.py remove_seed --asts-in ast_dir/lightning_asts.pkl

singularity exec \
  --bind "${work}:${work}" \
  "$IMG" bash -lc "cd ${work} && \
   python3 Instrumentor.py log \
    --csv-in test_csvs/lightning_assertions.csv \
    --csv-out test_csvs/lightning_assertions_m1.csv \
    --asts-in ast_dir/lightning_asts.pkl \
    --funcs-in ast_dir/lightning_funcs.pkl
