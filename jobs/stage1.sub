#!/bin/bash
#SBATCH --job-name=pl_stage1
#SBATCH --output=logs/stage1_%j.out

set -euo pipefail        # ← outer: host-level safety

# 1) stage the repo into fast node-local scratch
work=/scratch/$USER/$SLURM_JOB_ID
mkdir -p "$work"
cp -a "$SLURM_SUBMIT_DIR"/* "$work"/
cd "$work"

# 2) run the two AssertSpecFinder steps (clones Lightning internally)
singularity exec \
  --bind "${work}:${work}" \
  --pwd "${work}" \
  "$IMG" \
  bash -lc "
    set -euo pipefail

    python3.10 -m venv .venv
    source .venv/bin/activate
    pip install --upgrade pip

    mkdir -p ast_dir
    python3 AssertSpecFinder.py compile --project-link https://github.com/pyro-ppl/pyro.git \
        --clone-dir pyro_repo \
        --asts-out ast_dir/pyro_asts.pkl

    mkdir -p test_csvs
    python3 AssertSpecFinder.py mine --asts-in ast_dir/pyro_asts.pkl \
        --test-dir tests \
        --csv-target test_csvs/pyro_assertions.csv \
        --funcs-out ast_dir/pyro_funcs.pkl

    # 3) build isolated Python 3.10 env, then install deps
    pip install -r pyro_custom_cpu.txt
    pip freeze | grep -v '^-e ' > constraints.txt
    pip install -r script_reqs.txt --constraint constraints.txt

    # 4) seed stripping + instrumentation
    # python3 Seeder.py remove_seed --asts-in ast_dir/pyro_asts.pkl

    # python3 Instrumentor.py log --csv-in test_csvs/pyro_assertions.csv \
    #     --csv-out test_csvs/pyro_assertions_m1.csv \
    #     --asts-in ast_dir/pyro_asts.pkl \
    #     --funcs-in ast_dir/pyro_funcs.pkl
"

